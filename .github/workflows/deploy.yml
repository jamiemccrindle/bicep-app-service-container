name: deploy

on:
  workflow_dispatch: 

jobs:

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Install Bicep
      uses: azure/CLI@v1
      with:
        azcliversion: 2.23.0
        inlineScript: |
          az bicep install

    - uses: actions/checkout@v2

    - name: Deploy ACR
      id: deploy-acr
      uses: azure/CLI@v1
      with:
        azcliversion: 2.23.0
        inlineScript: |
          DEPLOYMENT=$(az deployment group create --name nextbicep --resource-group rg-bicep-app-service-container-001 --template-file ./infra/acr/main.bicep)
          ACR_NAME=$(echo $DEPLOYMENT | jq -r '.properties.outputs.acrName.value')
          ACR_LOGIN_SERVER=$(echo $DEPLOYMENT | jq -r '.properties.outputs.acrLoginServer.value')
          echo '::set-output name=ACR_LOGIN_SERVER::$ACR_LOGIN_SERVER'
          echo '::set-output name=ACR_NAME::$ACR_NAME'
    
    - name: ACR Login
      id: acr-login
      uses: azure/CLI@v1
      with:
        azcliversion: 2.23.0
        inlineScript: |
          LOGIN=$(az acr login --name "${{ steps.deploy-acr.output.ACR_NAME }}" --expose-token)
          ACR_ACCESS_TOKEN=$(echo $LOGIN | jq -r '.accessToken')
          echo '::add-mask::$ACR_ACCESS_TOKEN'
          echo '::set-output name=ACR_ACCESS_TOKEN::$ACR_ACCESS_TOKEN'

    - name: Docker Login
      run: |
        docker login ${{ steps.deploy-acr.output.ACR_LOGIN_SERVER }} --username 00000000-0000-0000-0000-000000000000 --password ${{ steps.acr-login.output.ACR_ACCESS_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.deploy-acr.output.ACR_NAME }}/bicep-app-service-container:latest
